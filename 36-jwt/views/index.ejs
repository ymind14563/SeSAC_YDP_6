<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <title>JWT 실습</title>
</head>
<body>
    <h1>JWT 로컬스토리지 실습</h1>
    <div id="info"></div>

    <script>
        // 즉시 실행 함수 표현식
        // Immediately Invoked Function Expression (IIFE 구조)
        // 이 함수 표현식은 함수가 한 번만 사용될 때 유용함
        // 또한, 전역 범위에 불필요한 함수를 추가하지 않아도 됨
        // 스코프: IIFE는 자체적인 스코프가 생성되어 변수 충돌을 방지하는 효과가 있음
        // 즉, IIFE 내부에서 선언된 변수들은 IIFE 외부에 영향을 주지 않음
        //
        // (function () {
        //       코드
        // })();
        // JS에서 함수를 정의하자마자 즉시 실행 할 수 있는 패턴

        (async function () {
            const token = localStorage.getItem('login');
            const info = document.querySelector('#info');
            let data = '';
            
            if (!token) {
                data = '<a href="/login"> 로그인 </a>';
            } else {
                const res = await axios({
                    method: 'POST',
                    url: '/token',
                    headers: {
                        Authorization: `Bearer ${token}`
                    }
                });

                if (res.data.result) {
                    data = `
                        <p>${res.data.name}님 환영합니다.</p>
                        <button type='button' onclick='logout()'>로그아웃</button>
                    `;
                }
            }
            info.innerHTML = data;
        })();

        function logout() {
            localStorage.clear();
            document.location.reload();
        }
    </script>

</body>
</html>